From 6961685fad04562554e313ca813d66f524c1c6b8 Mon Sep 17 00:00:00 2001
From: Jeroen Hofstee <jhofstee@victronenergy.com>
Date: Wed, 5 Mar 2025 13:51:44 +0100
Subject: [PATCH] fix time_t format, use %llu instead of %lu

---
 asc2log.c      | 18 +++++++++---------
 candump.c      |  6 +++---
 canlogserver.c |  2 +-
 canplayer.c    |  4 ++--
 isotpdump.c    |  6 +++---
 isotpperf.c    |  4 ++--
 isotpsniffer.c |  6 +++---
 j1939cat.c     |  2 +-
 j1939spy.c     |  4 ++--
 log2asc.c      |  8 ++++----
 slcanpty.c     |  2 +-
 11 files changed, 31 insertions(+), 31 deletions(-)

Upstream-Status: Backport

diff --git a/asc2log.c b/asc2log.c
index ea6b486..f566709 100644
--- a/asc2log.c
+++ b/asc2log.c
@@ -73,7 +73,7 @@ void print_usage(char *prg)
 
 void prframe(FILE *file, struct timeval *tv, int dev, struct canfd_frame *cf, unsigned int max_dlen, char *extra_info) {
 
-	fprintf(file, "(%lu.%06lu) ", tv->tv_sec, tv->tv_usec);
+	fprintf(file, "(%llu.%06llu) ", tv->tv_sec, tv->tv_usec);
 
 	if (dev > 0)
 		fprintf(file, "can%d ", dev-1);
@@ -143,7 +143,7 @@ void eval_can(char* buf, struct timeval *date_tvp, char timestamps, char base, i
 	int i, items;
 
 	/* check for ErrorFrames */
-	if (sscanf(buf, "%lu.%lu %d %s",
+	if (sscanf(buf, "%llu.%llu %d %s",
 		   &read_tv.tv_sec, &read_tv.tv_usec,
 		   &interface, tmp1) == 4) {
 
@@ -165,13 +165,13 @@ void eval_can(char* buf, struct timeval *date_tvp, char timestamps, char base, i
 
 	/* check for CAN frames with (hexa)decimal values */
 	if (base == 'h')
-		items = sscanf(buf, "%lu.%lu %d %s %2s %c %x %x %x %x %x %x %x %x %x",
+		items = sscanf(buf, "%llu.%llu %d %s %2s %c %x %x %x %x %x %x %x %x %x",
 			       &read_tv.tv_sec, &read_tv.tv_usec, &interface,
 			       tmp1, dir, &rtr, &dlc,
 			       &data[0], &data[1], &data[2], &data[3],
 			       &data[4], &data[5], &data[6], &data[7]);
 	else
-		items = sscanf(buf, "%lu.%lu %d %s %2s %c %x %d %d %d %d %d %d %d %d",
+		items = sscanf(buf, "%llu.%llu %d %s %2s %c %x %d %d %d %d %d %d %d %d",
 			       &read_tv.tv_sec, &read_tv.tv_usec, &interface,
 			       tmp1, dir, &rtr, &dlc,
 			       &data[0], &data[1], &data[2], &data[3],
@@ -255,12 +255,12 @@ void eval_canfd(char* buf, struct timeval *date_tvp, char timestamps, int dplace
 	   100000  214   223040 80000000 46500250 460a0250 20011736 20010205 */
 
 	/* check for valid line without symbolic name */
-	if (sscanf(buf, "%lu.%lu %*s %d %2s %s %hhx %hhx %x %d ",
+	if (sscanf(buf, "%llu.%llu %*s %d %2s %s %hhx %hhx %x %d ",
 		   &read_tv.tv_sec, &read_tv.tv_usec, &interface,
 		   dir, tmp1, &brs, &esi, &dlc, &dlen) != 9) {
 
 		/* check for valid line with a symbolic name */
-		if (sscanf(buf, "%lu.%lu %*s %d %2s %s %*s %hhx %hhx %x %d ",
+		if (sscanf(buf, "%llu.%llu %*s %d %2s %s %*s %hhx %hhx %x %d ",
 			   &read_tv.tv_sec, &read_tv.tv_usec, &interface,
 			   dir, tmp1, &brs, &esi, &dlc, &dlen) != 9) {
 
@@ -505,12 +505,12 @@ int main(int argc, char **argv)
 					gettimeofday(&date_tv, NULL);
 				}
 				if (verbose)
-					printf("date %lu => %s", date_tv.tv_sec, ctime(&date_tv.tv_sec));
+					printf("date %llu => %s", date_tv.tv_sec, ctime(&date_tv.tv_sec));
 				continue;
 			}
 
 			/* check for decimal places length in valid CAN frames */
-			if (sscanf(buf, "%lu.%s %s ", &tmp_tv.tv_sec, tmp2,
+			if (sscanf(buf, "%llu.%s %s ", &tmp_tv.tv_sec, tmp2,
 				   tmp1) != 3)
 				continue; /* dplace remains zero until first found CAN frame */
 
@@ -529,7 +529,7 @@ int main(int argc, char **argv)
 		/* so try to get CAN frames and ErrorFrames and convert them */
 
 		/* check classic CAN format or the CANFD tag which can take both types */
-		if (sscanf(buf, "%lu.%lu %s ", &tmp_tv.tv_sec,  &tmp_tv.tv_usec, tmp1) == 3){
+		if (sscanf(buf, "%llu.%llu %s ", &tmp_tv.tv_sec,  &tmp_tv.tv_usec, tmp1) == 3){
 			if (!strncmp(tmp1, "CANFD", 5))
 				eval_canfd(buf, &date_tv, timestamps, dplace, outfile);
 			else
diff --git a/candump.c b/candump.c
index 82f75b1..1d0dc9d 100644
--- a/candump.c
+++ b/candump.c
@@ -224,7 +224,7 @@ static inline void sprint_timestamp(const char timestamp, const struct timeval *
 {
 	switch (timestamp) {
 	case 'a': /* absolute with timestamp */
-		sprintf(ts_buffer, "(%010lu.%06lu) ", tv->tv_sec, tv->tv_usec);
+		sprintf(ts_buffer, "(%010llu.%06llu) ", tv->tv_sec, tv->tv_usec);
 		break;
 
 	case 'A': /* absolute with date */
@@ -234,7 +234,7 @@ static inline void sprint_timestamp(const char timestamp, const struct timeval *
 
 		tm = *localtime(&tv->tv_sec);
 		strftime(timestring, 24, "%Y-%m-%d %H:%M:%S", &tm);
-		sprintf(ts_buffer, "(%s.%06lu) ", timestring, tv->tv_usec);
+		sprintf(ts_buffer, "(%s.%06llu) ", timestring, tv->tv_usec);
 	}
 	break;
 
@@ -251,7 +251,7 @@ static inline void sprint_timestamp(const char timestamp, const struct timeval *
 			diff.tv_sec--, diff.tv_usec += 1000000;
 		if (diff.tv_sec < 0)
 			diff.tv_sec = diff.tv_usec = 0;
-		sprintf(ts_buffer, "(%03lu.%06lu) ", diff.tv_sec, diff.tv_usec);
+		sprintf(ts_buffer, "(%03llu.%06llu) ", diff.tv_sec, diff.tv_usec);
 
 		if (timestamp == 'd')
 			*last_tv = *tv; /* update for delta calculation */
diff --git a/canlogserver.c b/canlogserver.c
index 51d548f..774061c 100644
--- a/canlogserver.c
+++ b/canlogserver.c
@@ -408,7 +408,7 @@ int main(int argc, char **argv)
 
 				idx = idx2dindex(addr.can_ifindex, s[i]);
 
-				sprintf(temp, "(%lu.%06lu) %*s ",
+				sprintf(temp, "(%llu.%06llu) %*s ",
 					tv.tv_sec, tv.tv_usec, max_devname_len, devname[idx]);
 				sprint_canframe(temp+strlen(temp), &frame, 0, maxdlen); 
 				strcat(temp, "\n");
diff --git a/canplayer.c b/canplayer.c
index 51adc77..7033fc2 100644
--- a/canplayer.c
+++ b/canplayer.c
@@ -419,7 +419,7 @@ int main(int argc, char **argv)
 
 		eof = 0;
 
-		if (sscanf(buf, "(%lu.%lu) %s %s", &log_tv.tv_sec, &log_tv.tv_usec,
+		if (sscanf(buf, "(%llu.%llu) %s %s", &log_tv.tv_sec, &log_tv.tv_usec,
 			   device, ascframe) != 4) {
 			fprintf(stderr, "incorrect line format in logfile\n");
 			return 1;
@@ -505,7 +505,7 @@ int main(int argc, char **argv)
 					break;
 				}
 
-				if (sscanf(buf, "(%lu.%lu) %s %s", &log_tv.tv_sec, &log_tv.tv_usec,
+				if (sscanf(buf, "(%llu.%llu) %s %s", &log_tv.tv_sec, &log_tv.tv_usec,
 					   device, ascframe) != 4) {
 					fprintf(stderr, "incorrect line format in logfile\n");
 					return 1;
diff --git a/isotpdump.c b/isotpdump.c
index d22725e..87a2e4b 100644
--- a/isotpdump.c
+++ b/isotpdump.c
@@ -361,7 +361,7 @@ int main(int argc, char **argv)
 
 			switch (timestamp) {
 			case 'a': /* absolute with timestamp */
-				printf("(%lu.%06lu) ", tv.tv_sec, tv.tv_usec);
+				printf("(%llu.%06llu) ", tv.tv_sec, tv.tv_usec);
 				break;
 
 			case 'A': /* absolute with date */
@@ -372,7 +372,7 @@ int main(int argc, char **argv)
 				tm = *localtime(&tv.tv_sec);
 				strftime(timestring, 24, "%Y-%m-%d %H:%M:%S",
 					 &tm);
-				printf("(%s.%06lu) ", timestring, tv.tv_usec);
+				printf("(%s.%06llu) ", timestring, tv.tv_usec);
 			} break;
 
 			case 'd': /* delta */
@@ -388,7 +388,7 @@ int main(int argc, char **argv)
 					diff.tv_sec--, diff.tv_usec += 1000000;
 				if (diff.tv_sec < 0)
 					diff.tv_sec = diff.tv_usec = 0;
-				printf("(%lu.%06lu) ", diff.tv_sec,
+				printf("(%llu.%06llu) ", diff.tv_sec,
 				       diff.tv_usec);
 
 				if (timestamp == 'd')
diff --git a/isotpperf.c b/isotpperf.c
index 154d5cd..77b3684 100644
--- a/isotpperf.c
+++ b/isotpperf.c
@@ -403,8 +403,8 @@ int main(int argc, char **argv)
 
 				/* check devisor to be not zero */
 				if (diff_tv.tv_sec * 1000 + diff_tv.tv_usec / 1000){
-					printf("%lu.%06lus ", diff_tv.tv_sec, diff_tv.tv_usec);
-					printf("=> %lu byte/s", (fflen * 1000) /
+					printf("%llu.%06llus ", diff_tv.tv_sec, diff_tv.tv_usec);
+					printf("=> %llu byte/s", (fflen * 1000) /
 					       (diff_tv.tv_sec * 1000 + diff_tv.tv_usec / 1000));
 				} else
 					printf("(no time available)     ");
diff --git a/isotpsniffer.c b/isotpsniffer.c
index 2b6de40..90c1f67 100644
--- a/isotpsniffer.c
+++ b/isotpsniffer.c
@@ -101,7 +101,7 @@ void printbuf(unsigned char *buffer, int nbytes, int color, int timestamp,
 		switch (timestamp) {
 
 		case 'a': /* absolute with timestamp */
-			printf("(%lu.%06lu) ", tv->tv_sec, tv->tv_usec);
+			printf("(%llu.%06llu) ", tv->tv_sec, tv->tv_usec);
 			break;
 
 		case 'A': /* absolute with date */
@@ -111,7 +111,7 @@ void printbuf(unsigned char *buffer, int nbytes, int color, int timestamp,
 
 			tm = *localtime(&tv->tv_sec);
 			strftime(timestring, 24, "%Y-%m-%d %H:%M:%S", &tm);
-			printf("(%s.%06lu) ", timestring, tv->tv_usec);
+			printf("(%s.%06llu) ", timestring, tv->tv_usec);
 		}
 		break;
 
@@ -128,7 +128,7 @@ void printbuf(unsigned char *buffer, int nbytes, int color, int timestamp,
 				diff.tv_sec--, diff.tv_usec += 1000000;
 			if (diff.tv_sec < 0)
 				diff.tv_sec = diff.tv_usec = 0;
-			printf("(%lu.%06lu) ", diff.tv_sec, diff.tv_usec);
+			printf("(%llu.%06llu) ", diff.tv_sec, diff.tv_usec);
 
 			if (timestamp == 'd')
 				*last_tv = *tv; /* update for delta calculation */
diff --git a/j1939cat.c b/j1939cat.c
index 4234aad..20a4add 100644
--- a/j1939cat.c
+++ b/j1939cat.c
@@ -148,7 +148,7 @@ static void j1939cat_print_timestamp(struct j1939cat_priv *priv, const char *nam
 	if (!(cur->tv_sec | cur->tv_nsec))
 		return;
 
-	fprintf(stderr, "  %s: %lu s %lu us (seq=%03u, send=%07u)",
+	fprintf(stderr, "  %s: %llu s %lu us (seq=%03u, send=%07u)",
 			name, cur->tv_sec, cur->tv_nsec / 1000,
 			stats->tskey, stats->send);
 
diff --git a/j1939spy.c b/j1939spy.c
index e49ed14..be5f260 100644
--- a/j1939spy.c
+++ b/j1939spy.c
@@ -268,11 +268,11 @@ int main(int argc, char **argv)
 				goto abs_time;
 			} else if ('a' == s.time) {
 				abs_time:
-				printf("(%lu.%04lu)", tdut.tv_sec, tdut.tv_usec / 100);
+				printf("(%llu.%04llu)", tdut.tv_sec, tdut.tv_usec / 100);
 			} else if ('A' == s.time) {
 				struct tm tm;
 				tm = *localtime(&tdut.tv_sec);
-				printf("(%04u%02u%02uT%02u%02u%02u.%04lu)",
+				printf("(%04u%02u%02uT%02u%02u%02u.%04llu)",
 					tm.tm_year + 1900, tm.tm_mon + 1, tm.tm_mday,
 					tm.tm_hour, tm.tm_min, tm.tm_sec,
 					tdut.tv_usec/100);
diff --git a/log2asc.c b/log2asc.c
index a1cf364..78336fd 100644
--- a/log2asc.c
+++ b/log2asc.c
@@ -259,13 +259,13 @@ int main(int argc, char **argv)
 		if (buf[0] != '(')
 			continue;
 
-		if (sscanf(buf, "(%lu.%lu) %s %s %s", &tv.tv_sec, &tv.tv_usec,
+		if (sscanf(buf, "(%llu.%llu) %s %s %s", &tv.tv_sec, &tv.tv_usec,
 			   device, ascframe, extra_info) != 5) {
 
 			/* do not evaluate the extra info */
 			extra_info[0] = 0;
 
-			if (sscanf(buf, "(%lu.%lu) %s %s", &tv.tv_sec, &tv.tv_usec,
+			if (sscanf(buf, "(%llu.%llu) %s %s", &tv.tv_sec, &tv.tv_usec,
 				   device, ascframe) != 4) {
 				fprintf(stderr, "incorrect line format in logfile\n");
 				return 1;
@@ -305,9 +305,9 @@ int main(int argc, char **argv)
 				tv.tv_sec = tv.tv_usec = 0;
 
 			if (d4)
-				fprintf(outfile, "%4lu.%04lu ", tv.tv_sec, tv.tv_usec/100);
+				fprintf(outfile, "%4llu.%04llu ", tv.tv_sec, tv.tv_usec/100);
 			else
-				fprintf(outfile, "%4lu.%06lu ", tv.tv_sec, tv.tv_usec);
+				fprintf(outfile, "%4llu.%06llu ", tv.tv_sec, tv.tv_usec);
 
 			if ((mtu == CAN_MTU) && (fdfmt == 0))
 				can_asc(&cf, devno, nortrdlc, extra_info, outfile);
diff --git a/slcanpty.c b/slcanpty.c
index fa97cd6..86afe4a 100644
--- a/slcanpty.c
+++ b/slcanpty.c
@@ -363,7 +363,7 @@ int can2pty(int pty, int socket, int *tstamp)
 		if (ioctl(socket, SIOCGSTAMP, &tv) < 0)
 			perror("SIOCGSTAMP");
 
-		sprintf(&buf[ptr + 2*frame.can_dlc], "%04lX",
+		sprintf(&buf[ptr + 2*frame.can_dlc], "%04llX",
 			(tv.tv_sec%60)*1000 + tv.tv_usec/1000);
 	}
 
-- 
2.43.0

